
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGNMENT CLOSE_PAREN COLON DOUBLE EQ GT IDENTIFIER IF INTEGER LT MINUS NEQ OPEN_PAREN OUTPUT PLUS SEMI_COLON STRING TYPEprogram : program statement SEMI_COLON\n               | statement SEMI_COLONstatement : conditional_statement\n                  | variable_declaration\n                  | assignment_statement\n                  | print_statement variable_declaration : IDENTIFIER COLON TYPEassignment_statement : IDENTIFIER ASSIGNMENT expressionconditional_statement : IF OPEN_PAREN comparison CLOSE_PAREN COLON statementexpression : term\n                  | term PLUS term\n                  | term MINUS termterm : INTEGER\n            | DOUBLE\n            | IDENTIFIER\n            | STRINGprint_statement : OUTPUT expressioncomparison : expression LT expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NEQ expression'
    
_lr_action_items = {'IF':([0,1,11,21,35,],[7,7,-2,-1,7,]),'IDENTIFIER':([0,1,9,11,12,14,21,26,27,29,30,31,32,35,],[8,8,19,-2,19,19,-1,19,19,19,19,19,19,8,]),'OUTPUT':([0,1,11,21,35,],[9,9,-2,-1,9,]),'$end':([1,11,21,],[0,-2,-1,]),'SEMI_COLON':([2,3,4,5,6,10,15,16,17,18,19,20,24,25,33,34,40,],[11,-3,-4,-5,-6,21,-17,-10,-13,-14,-15,-16,-7,-8,-11,-12,-9,]),'OPEN_PAREN':([7,],[12,]),'COLON':([8,28,],[13,35,]),'ASSIGNMENT':([8,],[14,]),'INTEGER':([9,12,14,26,27,29,30,31,32,],[17,17,17,17,17,17,17,17,17,]),'DOUBLE':([9,12,14,26,27,29,30,31,32,],[18,18,18,18,18,18,18,18,18,]),'STRING':([9,12,14,26,27,29,30,31,32,],[20,20,20,20,20,20,20,20,20,]),'TYPE':([13,],[24,]),'LT':([16,17,18,19,20,23,33,34,],[-10,-13,-14,-15,-16,29,-11,-12,]),'GT':([16,17,18,19,20,23,33,34,],[-10,-13,-14,-15,-16,30,-11,-12,]),'EQ':([16,17,18,19,20,23,33,34,],[-10,-13,-14,-15,-16,31,-11,-12,]),'NEQ':([16,17,18,19,20,23,33,34,],[-10,-13,-14,-15,-16,32,-11,-12,]),'CLOSE_PAREN':([16,17,18,19,20,22,33,34,36,37,38,39,],[-10,-13,-14,-15,-16,28,-11,-12,-18,-19,-20,-21,]),'PLUS':([16,17,18,19,20,],[26,-13,-14,-15,-16,]),'MINUS':([16,17,18,19,20,],[27,-13,-14,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,35,],[2,10,40,]),'conditional_statement':([0,1,35,],[3,3,3,]),'variable_declaration':([0,1,35,],[4,4,4,]),'assignment_statement':([0,1,35,],[5,5,5,]),'print_statement':([0,1,35,],[6,6,6,]),'expression':([9,12,14,29,30,31,32,],[15,23,25,36,37,38,39,]),'term':([9,12,14,26,27,29,30,31,32,],[16,16,16,33,34,16,16,16,16,]),'comparison':([12,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement SEMI_COLON','program',3,'p_program','HLInt.py',60),
  ('program -> statement SEMI_COLON','program',2,'p_program','HLInt.py',61),
  ('statement -> conditional_statement','statement',1,'p_statement','HLInt.py',65),
  ('statement -> variable_declaration','statement',1,'p_statement','HLInt.py',66),
  ('statement -> assignment_statement','statement',1,'p_statement','HLInt.py',67),
  ('statement -> print_statement','statement',1,'p_statement','HLInt.py',68),
  ('variable_declaration -> IDENTIFIER COLON TYPE','variable_declaration',3,'p_variable_declaration','HLInt.py',72),
  ('assignment_statement -> IDENTIFIER ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement','HLInt.py',76),
  ('conditional_statement -> IF OPEN_PAREN comparison CLOSE_PAREN COLON statement','conditional_statement',6,'p_conditional_statement','HLInt.py',80),
  ('expression -> term','expression',1,'p_expression','HLInt.py',84),
  ('expression -> term PLUS term','expression',3,'p_expression','HLInt.py',85),
  ('expression -> term MINUS term','expression',3,'p_expression','HLInt.py',86),
  ('term -> INTEGER','term',1,'p_term','HLInt.py',90),
  ('term -> DOUBLE','term',1,'p_term','HLInt.py',91),
  ('term -> IDENTIFIER','term',1,'p_term','HLInt.py',92),
  ('term -> STRING','term',1,'p_term','HLInt.py',93),
  ('print_statement -> OUTPUT expression','print_statement',2,'p_print_statement','HLInt.py',97),
  ('comparison -> expression LT expression','comparison',3,'p_comparison','HLInt.py',101),
  ('comparison -> expression GT expression','comparison',3,'p_comparison','HLInt.py',102),
  ('comparison -> expression EQ expression','comparison',3,'p_comparison','HLInt.py',103),
  ('comparison -> expression NEQ expression','comparison',3,'p_comparison','HLInt.py',104),
]
